spring.application.name=demo1
#server.address=127.0.0.1
#server.port=9191
#spring.datasource.url=jdbc:mysql://10.211.55.5:3306/user?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
#spring.datasource.username=root
#spring.datasource.password=12345678
#spring.jpa.hibernate.ddl-auto=update
#spring.sql.init.mode=always
#spring.jpa.defer-datasource-initialization=true
#spring.security.user.name=admin
#spring.security.user.password=admin
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#
#
#jwt.secret=clave-segura-para-jwt-12345678901234
#
#jwt.expiration=86400000
##spring.profiles.active=prod
#
#
#logging.level.org.springframework.security=DEBUG
#logging.level.com.example.demo1.security=DEBUG
#spring.main.allow-circular-references=true
#spring.mail.host=smtp.gmail.com
#spring.mail.port=587
#spring.mail.username=tu_correo@gmail.com
#spring.mail.password=tu_contrasenia_app
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true




# JDBC URL de MySQL
spring.datasource.url=jdbc:mysql://${MYSQLHOST}:${MYSQLPORT}/${MYSQLDATABASE}?useSSL=false&serverTimezone=UTC
spring.datasource.username=${MYSQLUSER}
spring.datasource.password=${MYSQLPASSWORD}
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true
server.port=8080
jwt.secret=ajskdjf9238sdj9234jsdf9023j4j23kjhsdf
